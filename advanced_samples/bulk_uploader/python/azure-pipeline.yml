trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - "advanced_samples/bulk_uploader/python"

pr:
  branches:
    include:
      - master
  paths:
    include:
      - "advanced_samples/bulk_uploader/python"

schedules:
  - cron: "0 0 * * 0"
    displayName: Weekly build
    branches:
      include:
        - master
    always: true

variables:
  - template: "/miscellaneous/build_templates/variables.yml"
  - name: projPath
    value: "/advanced_samples/bulk_uploader/python"
  - name: CredFile
    value: config.ini
  - name: CredFileLibrary
    value: product-readiness.omf_dc_python.ocs.ini
  - name: CredFileLibraryOP
    value: product-readiness.omf_dc_python.pi.ini
  - name: CredFileLibraryEDS
    value: product-readiness.omf_dc_python.eds.ini
  - name: covStream
    value: OMF_BU_Python
  - name: bdProject
    value: OMF_BU_Python

jobs:
  - job: Tests_OCS
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.8"
          architecture: "x64"

      - task: DownloadSecureFile@1
        inputs:
          secureFile: $(CredFileLibrary)
        displayName: "Download library config file"

      # Copy Files
      # Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
      - task: CopyFiles@2
        inputs:
          sourceFolder: $(Agent.TempDirectory)
          contents: $(CredFileLibrary)
          targetFolder: $(Build.SourcesDirectory)$(projPath)/
          #cleanTargetFolder: false # Optional
          overWrite: true # Optional
          #flattenFolders: false # Optional
        displayName: "Copy library config file"

      - bash: dir
        workingDirectory: $(Build.SourcesDirectory)
        displayName: "Dir"

      - bash: dir
        workingDirectory: $(Build.SourcesDirectory)/advanced_samples
        displayName: "Dir"

      - bash: rm $(CredFile)
        workingDirectory: $(Build.SourcesDirectory)$(projPath)/
        displayName: "Delete original config file"

      - bash: mv $(CredFileLibrary) $(CredFile)
        workingDirectory: $(Build.SourcesDirectory)$(projPath)/
        displayName: "Rename library config file"

      - script: |
          echo Install tools
          pip install setuptools wheel
          pip install unittest-xml-reporting    
          pip install pytest
          pip install pytest-cov
          echo Install requirements
          pip install -r requirements.txt
          echo Run tests
          python -m pytest ./test_sample.py --junitxml=junit/test-results.xml 
          echo Complete
        workingDirectory: $(Build.SourcesDirectory)$(projPath)/
        displayName: "Run tests"

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: "**/test-*.xml"
          failTaskOnFailedTests: true
          testRunTitle: "$(Agent.JobName) on ubuntu-16.04"
        displayName: "Publish test results"
