
jobs:      
- job: OMF_APIDotNet_Cov

  pool:
    name: 00-OSIManaged-Test
    demands: USERNAME -equals IAC8188$

  steps:
  - script: 'mkdir cov-int'
    workingDirectory: '$(Build.SourcesDirectory)/basic_samples/OMF_API/Python3/'
    displayName: 'make dir '
    continueOnError: true

  - script: '"C:\Program Files\Coverity\Coverity Static Analysis\bin\cov-build" --dir . --no-command --fs-capture-search ../ '
    workingDirectory: '$(Build.SourcesDirectory)/basic_samples/OMF_API/Python3/cov-int'
    displayName: 'build '

  - script: '"C:\Program Files\Coverity\Coverity Static Analysis\bin\cov-analyze" --dir . '
    workingDirectory: '$(Build.SourcesDirectory)/basic_samples/OMF_API/Python3/cov-int'
    displayName: 'analyze '

  - script: '"C:\Program Files\Coverity\Coverity Static Analysis\bin\cov-commit-defects" --stream "Engineering Incubation - OMF_APIPy" --host $(coverity_server) --https-port 8443 --auth-key-file "C:\Users\dendres\Documents\coverity\keyfile.ky" --dir . '
    workingDirectory: '$(Build.SourcesDirectory)/basic_samples/OMF_API/Python3/cov-int'
    displayName: 'upload '

- job: OMF_APIDotNet_BD

  pool:
    name: Hosted VS2017
    demands:
      - maven
      - npm

  steps:
   - task: black-duck-software.detect-for-tfs.hub.detect.task.BlackDuckDetect@1
     displayName: 'Run Black Duck Detect for OMF_APIDotNet'
     inputs:
        BlackDuckHubService: 'Black Duck'
        DetectArguments: |
           --detect.project.name="OMF_APIDotNet" 
           --detect.project.version.name="latest" 
           --detect.source.path="$(build.sourcesDirectory)\basic_samples\OMF_API\CSharp\OMF_API"
           --detect.code.location.name="code_location_OMF_APIDotNet_latest_OMF_APIDotNet"
           --detect.bom.aggregate.name="bom_OMF_APIDotNet_latest_OMF_APIDotNet"